(define (problem VGDLGameProblem)
    (:domain VGDLGame)
    (:objects
        redkey_8_9 - redkey
        mud1 - mud
        avatar - avatar
        yellowdoor_4_3 - yellowdoor
        fireboots_10_6 - fireboots
        greenkey_10_1 - greenkey
        crate_3_3 crate_5_7 crate_3_8 crate_7_8 - crate
        chip_1_1 chip_2_1 chip_1_3 chip_1_4 chip_9_6 chip_9_10 chip_10_10 chip_1_11 chip_2_11 chip_5_11 chip_6_11 - chip
        yellowkey_7_6 - yellowkey
        flippers_4_1 - flippers
        reddoor_5_5 - reddoor
        exit_9_4 - exit
        greendoor_2_2 - greendoor
        n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 - num
    )
    (:init
        (is-wall n0 n0)
        (is-wall n1 n0)
        (is-wall n2 n0)
        (is-wall n3 n0)
        (is-wall n4 n0)
        (is-wall n5 n0)
        (is-wall n6 n0)
        (is-wall n7 n0)
        (is-wall n8 n0)
        (is-wall n9 n0)
        (is-wall n10 n0)
        (is-wall n11 n0)
        (is-wall n0 n1)
        (at n1 n1 chip_1_1)
        (at n2 n1 chip_2_1)
        (is-wall n3 n1)
        (at n4 n1 flippers_4_1)
        (is-water n5 n1)
        (is-fire n9 n1)
        (at n10 n1 greenkey_10_1)
        (is-wall n11 n1)
        (is-wall n0 n2)
        (is-wall n1 n2)
        (at n2 n2 greendoor_2_2)
        (is-wall n3 n2)
        (is-water n4 n2)
        (is-water n5 n2)
        (is-wall n7 n2)
        (is-wall n8 n2)
        (is-gate n9 n2)
        (is-wall n10 n2)
        (is-wall n11 n2)
        (is-wall n0 n3)
        (at n1 n3 chip_1_3)
        (at n3 n3 crate_3_3)
        (at n4 n3 yellowdoor_4_3)
        (is-wall n7 n3)
        (is-wall n11 n3)
        (is-wall n0 n4)
        (at n1 n4 chip_1_4)
        (is-wall n7 n4)
        (at n9 n4 exit_9_4)
        (is-wall n11 n4)
        (is-wall n0 n5)
        (is-wall n1 n5)
        (is-wall n2 n5)
        (is-wall n3 n5)
        (is-wall n4 n5)
        (at n5 n5 reddoor_5_5)
        (is-wall n6 n5)
        (is-wall n7 n5)
        (is-wall n8 n5)
        (is-wall n9 n5)
        (is-wall n10 n5)
        (is-wall n11 n5)
        (is-wall n0 n6)
        (is-water n6 n6)
        (at n7 n6 yellowkey_7_6)
        (is-water n8 n6)
        (at n9 n6 chip_9_6)
        (at n10 n6 fireboots_10_6)
        (is-wall n11 n6)
        (is-wall n0 n7)
        (oriented-none avatar)
        (at n1 n7 avatar)
        (is-wall n3 n7)
        (at n5 n7 crate_5_7)
        (is-wall n6 n7)
        (is-wall n7 n7)
        (is-wall n8 n7)
        (is-wall n9 n7)
        (is-wall n10 n7)
        (is-wall n11 n7)
        (is-wall n0 n8)
        (at n3 n8 crate_3_8)
        (at n7 n8 crate_7_8)
        (is-wall n11 n8)
        (is-wall n0 n9)
        (is-wall n3 n9)
        (is-wall n7 n9)
        (at n8 n9 redkey_8_9)
        (is-wall n11 n9)
        (is-wall n0 n10)
        (is-fire n1 n10)
        (is-fire n2 n10)
        (is-wall n3 n10)
        (is-wall n4 n10)
        (is-water n5 n10)
        (is-water n6 n10)
        (is-wall n7 n10)
        (at n9 n10 chip_9_10)
        (at n10 n10 chip_10_10)
        (is-wall n11 n10)
        (is-wall n0 n11)
        (at n1 n11 chip_1_11)
        (at n2 n11 chip_2_11)
        (is-wall n3 n11)
        (is-wall n4 n11)
        (at n5 n11 chip_5_11)
        (at n6 n11 chip_6_11)
        (is-wall n7 n11)
        (is-wall n11 n11)
        (is-wall n0 n12)
        (is-wall n1 n12)
        (is-wall n2 n12)
        (is-wall n3 n12)
        (is-wall n4 n12)
        (is-wall n5 n12)
        (is-wall n6 n12)
        (is-wall n7 n12)
        (is-wall n8 n12)
        (is-wall n9 n12)
        (is-wall n10 n12)
        (is-wall n11 n12)
        (next n0 n1)
        (next n1 n2)
        (next n2 n3)
        (next n3 n4)
        (next n4 n5)
        (next n5 n6)
        (next n6 n7)
        (next n7 n8)
        (next n8 n9)
        (next n9 n10)
        (next n10 n11)
        (next n11 n12)
        (previous n1 n0)
        (previous n2 n1)
        (previous n3 n2)
        (previous n4 n3)
        (previous n5 n4)
        (previous n6 n5)
        (previous n7 n6)
        (previous n8 n7)
        (previous n9 n8)
        (previous n10 n9)
        (previous n11 n10)
        (previous n12 n11)
        (turn-avatar)
        (got-resource-redkey n0)
        (got-resource-bluekey n0)
        (got-resource-greenkey n0)
        (got-resource-yellowkey n0)
        (got-resource-flippers n0)
        (got-resource-fireboots n0)
        (got-resource-chip n0)
        (object-dead mud1)
    )
    (:goal
        (AND
            (forall (?o - exit) (object-dead ?o))
        )
    )
)