(define (problem VGDLGameProblem)
    (:domain VGDLGame)
    (:objects
        redkey_9_5 redkey_9_7 - redkey
        mud1 - mud
        avatar - avatar
        yellowdoor_6_9 yellowdoor_8_9 - yellowdoor
        greenkey_6_12 greenkey_8_12 - greenkey
        chip_4_2 chip_10_2 chip_2_5 chip_12_5 chip_5_6 chip_9_6 chip_2_7 chip_12_7 chip_7_8 chip_6_11 chip_8_11 - chip
        yellowkey_2_4 yellowkey_12_4 - yellowkey
        bluedoor_4_4 bluedoor_10_8 - bluedoor
        reddoor_10_4 reddoor_4_8 - reddoor
        exit_7_2 - exit
        bluekey_5_5 bluekey_5_7 - bluekey
        greendoor_5_3 greendoor_9_3 - greendoor
        n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 - num
    )
    (:init
        (is-wall n0 n0)
        (is-wall n1 n0)
        (is-wall n2 n0)
        (is-wall n3 n0)
        (is-wall n4 n0)
        (is-wall n5 n0)
        (is-wall n6 n0)
        (is-wall n7 n0)
        (is-wall n8 n0)
        (is-wall n9 n0)
        (is-wall n10 n0)
        (is-wall n11 n0)
        (is-wall n12 n0)
        (is-wall n13 n0)
        (is-wall n14 n0)
        (is-wall n0 n1)
        (is-wall n1 n1)
        (is-wall n2 n1)
        (is-wall n6 n1)
        (is-wall n7 n1)
        (is-wall n8 n1)
        (is-wall n12 n1)
        (is-wall n13 n1)
        (is-wall n14 n1)
        (is-wall n0 n2)
        (is-wall n1 n2)
        (is-wall n2 n2)
        (at n4 n2 chip_4_2)
        (is-wall n6 n2)
        (at n7 n2 exit_7_2)
        (is-wall n8 n2)
        (at n10 n2 chip_10_2)
        (is-wall n12 n2)
        (is-wall n13 n2)
        (is-wall n14 n2)
        (is-wall n0 n3)
        (is-wall n1 n3)
        (is-wall n2 n3)
        (is-wall n3 n3)
        (is-wall n4 n3)
        (at n5 n3 greendoor_5_3)
        (is-wall n6 n3)
        (is-gate n7 n3)
        (is-wall n8 n3)
        (at n9 n3 greendoor_9_3)
        (is-wall n10 n3)
        (is-wall n11 n3)
        (is-wall n12 n3)
        (is-wall n13 n3)
        (is-wall n14 n3)
        (is-wall n0 n4)
        (at n2 n4 yellowkey_2_4)
        (at n4 n4 bluedoor_4_4)
        (at n10 n4 reddoor_10_4)
        (at n12 n4 yellowkey_12_4)
        (is-wall n14 n4)
        (is-wall n0 n5)
        (at n2 n5 chip_2_5)
        (is-wall n4 n5)
        (at n5 n5 bluekey_5_5)
        (at n9 n5 redkey_9_5)
        (is-wall n10 n5)
        (at n12 n5 chip_12_5)
        (is-wall n14 n5)
        (is-wall n0 n6)
        (is-wall n1 n6)
        (is-wall n2 n6)
        (is-wall n3 n6)
        (is-wall n4 n6)
        (at n5 n6 chip_5_6)
        (oriented-none avatar)
        (at n7 n6 avatar)
        (at n9 n6 chip_9_6)
        (is-wall n10 n6)
        (is-wall n11 n6)
        (is-wall n12 n6)
        (is-wall n13 n6)
        (is-wall n14 n6)
        (is-wall n0 n7)
        (at n2 n7 chip_2_7)
        (is-wall n4 n7)
        (at n5 n7 bluekey_5_7)
        (at n9 n7 redkey_9_7)
        (is-wall n10 n7)
        (at n12 n7 chip_12_7)
        (is-wall n14 n7)
        (is-wall n0 n8)
        (at n4 n8 reddoor_4_8)
        (at n7 n8 chip_7_8)
        (at n10 n8 bluedoor_10_8)
        (is-wall n14 n8)
        (is-wall n0 n9)
        (is-wall n1 n9)
        (is-wall n2 n9)
        (is-wall n3 n9)
        (is-wall n4 n9)
        (is-wall n5 n9)
        (at n6 n9 yellowdoor_6_9)
        (is-wall n7 n9)
        (at n8 n9 yellowdoor_8_9)
        (is-wall n9 n9)
        (is-wall n10 n9)
        (is-wall n11 n9)
        (is-wall n12 n9)
        (is-wall n13 n9)
        (is-wall n14 n9)
        (is-wall n0 n10)
        (is-wall n1 n10)
        (is-wall n2 n10)
        (is-wall n3 n10)
        (is-wall n4 n10)
        (is-wall n7 n10)
        (is-wall n10 n10)
        (is-wall n11 n10)
        (is-wall n12 n10)
        (is-wall n13 n10)
        (is-wall n14 n10)
        (is-wall n0 n11)
        (is-wall n1 n11)
        (is-wall n2 n11)
        (is-wall n3 n11)
        (is-wall n4 n11)
        (at n6 n11 chip_6_11)
        (is-wall n7 n11)
        (at n8 n11 chip_8_11)
        (is-wall n10 n11)
        (is-wall n11 n11)
        (is-wall n12 n11)
        (is-wall n13 n11)
        (is-wall n14 n11)
        (is-wall n0 n12)
        (is-wall n1 n12)
        (is-wall n2 n12)
        (is-wall n3 n12)
        (is-wall n4 n12)
        (at n6 n12 greenkey_6_12)
        (is-wall n7 n12)
        (at n8 n12 greenkey_8_12)
        (is-wall n10 n12)
        (is-wall n11 n12)
        (is-wall n12 n12)
        (is-wall n13 n12)
        (is-wall n14 n12)
        (is-wall n0 n13)
        (is-wall n1 n13)
        (is-wall n2 n13)
        (is-wall n3 n13)
        (is-wall n4 n13)
        (is-wall n5 n13)
        (is-wall n6 n13)
        (is-wall n7 n13)
        (is-wall n8 n13)
        (is-wall n9 n13)
        (is-wall n10 n13)
        (is-wall n11 n13)
        (is-wall n12 n13)
        (is-wall n13 n13)
        (is-wall n14 n13)
        (next n0 n1)
        (next n1 n2)
        (next n2 n3)
        (next n3 n4)
        (next n4 n5)
        (next n5 n6)
        (next n6 n7)
        (next n7 n8)
        (next n8 n9)
        (next n9 n10)
        (next n10 n11)
        (next n11 n12)
        (next n12 n13)
        (next n13 n14)
        (previous n1 n0)
        (previous n2 n1)
        (previous n3 n2)
        (previous n4 n3)
        (previous n5 n4)
        (previous n6 n5)
        (previous n7 n6)
        (previous n8 n7)
        (previous n9 n8)
        (previous n10 n9)
        (previous n11 n10)
        (previous n12 n11)
        (previous n13 n12)
        (previous n14 n13)
        (turn-avatar)
        (got-resource-redkey n0)
        (got-resource-bluekey n0)
        (got-resource-greenkey n0)
        (got-resource-yellowkey n0)
        (got-resource-flippers n0)
        (got-resource-fireboots n0)
        (got-resource-chip n0)
        (object-dead mud1)
    )
    (:goal
        (AND
            (forall (?o - exit) (object-dead ?o))
        )
    )
)