(define (problem VGDLGameProblem)
    (:domain VGDLGame)
    (:objects
        box_4_3 box_2_4 box_3_4 box_4_4 box_2_5 box_4_5 box_2_6 box_4_6 - box
        avatar - avatar
        goal_4_7 - goal
        mushroom_2_3 - mushroom
        key_1_1 - key
        n0 n1 n2 n3 n4 n5 n6 n7 n8 - num
    )
    (:init
        (is-wall n0 n0)
        (is-wall n1 n0)
        (is-wall n2 n0)
        (is-wall n3 n0)
        (is-wall n4 n0)
        (is-wall n5 n0)
        (is-wall n6 n0)
        (is-wall n0 n1)
        (at n1 n1 key_1_1)
        (is-wall n2 n1)
        (is-wall n3 n1)
        (is-wall n4 n1)
        (is-wall n5 n1)
        (is-wall n6 n1)
        (is-wall n0 n2)
        (is-hole n1 n2)
        (is-hole n2 n2)
        (is-hole n3 n2)
        (is-wall n6 n2)
        (is-wall n0 n3)
        (is-hole n1 n3)
        (at n2 n3 mushroom_2_3)
        (is-hole n3 n3)
        (at n4 n3 box_4_3)
        (is-wall n6 n3)
        (is-wall n0 n4)
        (is-hole n1 n4)
        (at n2 n4 box_2_4)
        (at n3 n4 box_3_4)
        (at n4 n4 box_4_4)
        (is-wall n6 n4)
        (is-wall n0 n5)
        (at n2 n5 box_2_5)
        (oriented-none avatar)
        (at n3 n5 avatar)
        (at n4 n5 box_4_5)
        (is-wall n6 n5)
        (is-wall n0 n6)
        (is-hole n1 n6)
        (at n2 n6 box_2_6)
        (at n4 n6 box_4_6)
        (is-wall n6 n6)
        (is-wall n0 n7)
        (is-wall n1 n7)
        (is-wall n2 n7)
        (is-wall n3 n7)
        (at n4 n7 goal_4_7)
        (is-wall n6 n7)
        (is-wall n0 n8)
        (is-wall n1 n8)
        (is-wall n2 n8)
        (is-wall n3 n8)
        (is-wall n4 n8)
        (is-wall n5 n8)
        (is-wall n6 n8)
        (next n0 n1)
        (next n1 n2)
        (next n2 n3)
        (next n3 n4)
        (next n4 n5)
        (next n5 n6)
        (next n6 n7)
        (next n7 n8)
        (previous n1 n0)
        (previous n2 n1)
        (previous n3 n2)
        (previous n4 n3)
        (previous n5 n4)
        (previous n6 n5)
        (previous n7 n6)
        (previous n8 n7)
        (turn-avatar)
        (got-resource-key n0)
    )
    (:goal
        (AND
            (forall (?o - goal) (object-dead ?o))
        )
    )
)