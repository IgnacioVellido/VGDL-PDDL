(define (problem VGDLGameProblem)
    (:domain VGDLGame)
    (:objects
        box_3_2 box_9_2 box_2_4 box_10_4 box_6_5 box_6_7 - box
        avatar - avatar
        goal_7_8 - goal
        mushroom_6_4 - mushroom
        key_6_2 - key
        n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 - num
    )
    (:init
        (is-wall n0 n0)
        (is-wall n1 n0)
        (is-wall n2 n0)
        (is-wall n3 n0)
        (is-wall n4 n0)
        (is-wall n5 n0)
        (is-wall n6 n0)
        (is-wall n7 n0)
        (is-wall n8 n0)
        (is-wall n9 n0)
        (is-wall n10 n0)
        (is-wall n11 n0)
        (is-wall n12 n0)
        (is-wall n0 n1)
        (is-hole n4 n1)
        (is-hole n5 n1)
        (is-hole n7 n1)
        (is-hole n8 n1)
        (is-wall n12 n1)
        (is-wall n0 n2)
        (is-wall n2 n2)
        (at n3 n2 box_3_2)
        (is-hole n4 n2)
        (is-hole n5 n2)
        (at n6 n2 key_6_2)
        (is-hole n7 n2)
        (is-hole n8 n2)
        (at n9 n2 box_9_2)
        (is-wall n10 n2)
        (is-wall n12 n2)
        (is-wall n0 n3)
        (is-wall n2 n3)
        (is-hole n4 n3)
        (is-hole n5 n3)
        (is-hole n6 n3)
        (is-hole n7 n3)
        (is-hole n8 n3)
        (is-wall n10 n3)
        (is-wall n12 n3)
        (is-wall n0 n4)
        (at n2 n4 box_2_4)
        (is-hole n4 n4)
        (is-hole n5 n4)
        (at n6 n4 mushroom_6_4)
        (is-hole n7 n4)
        (is-hole n8 n4)
        (at n10 n4 box_10_4)
        (is-wall n12 n4)
        (is-wall n0 n5)
        (is-wall n2 n5)
        (is-wall n4 n5)
        (is-wall n5 n5)
        (at n6 n5 box_6_5)
        (is-wall n7 n5)
        (is-wall n8 n5)
        (is-wall n10 n5)
        (is-wall n12 n5)
        (is-wall n0 n6)
        (is-wall n12 n6)
        (is-wall n0 n7)
        (is-wall n2 n7)
        (is-wall n3 n7)
        (is-wall n4 n7)
        (is-wall n5 n7)
        (at n6 n7 box_6_7)
        (is-wall n7 n7)
        (is-wall n8 n7)
        (is-wall n9 n7)
        (is-wall n10 n7)
        (is-wall n12 n7)
        (is-wall n0 n8)
        (oriented-none avatar)
        (at n6 n8 avatar)
        (at n7 n8 goal_7_8)
        (is-wall n12 n8)
        (is-wall n0 n9)
        (is-wall n1 n9)
        (is-wall n2 n9)
        (is-wall n3 n9)
        (is-wall n4 n9)
        (is-wall n5 n9)
        (is-wall n6 n9)
        (is-wall n7 n9)
        (is-wall n8 n9)
        (is-wall n9 n9)
        (is-wall n10 n9)
        (is-wall n11 n9)
        (is-wall n12 n9)
        (next n0 n1)
        (next n1 n2)
        (next n2 n3)
        (next n3 n4)
        (next n4 n5)
        (next n5 n6)
        (next n6 n7)
        (next n7 n8)
        (next n8 n9)
        (next n9 n10)
        (next n10 n11)
        (next n11 n12)
        (previous n1 n0)
        (previous n2 n1)
        (previous n3 n2)
        (previous n4 n3)
        (previous n5 n4)
        (previous n6 n5)
        (previous n7 n6)
        (previous n8 n7)
        (previous n9 n8)
        (previous n10 n9)
        (previous n11 n10)
        (previous n12 n11)
        (turn-avatar)
        (got-resource-key n0)
    )
    (:goal
        (AND
            (object-dead goal_7_8)
        )
    )
)