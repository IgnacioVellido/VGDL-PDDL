(define (problem VGDLGameProblem)
    (:domain VGDLGame)
    (:objects
        box_5_2 box_3_4 - box
        avatar - avatar
        hole_3_1 hole_3_6 - hole
        n0 n1 n2 n3 n4 n5 n6 n7 n8 - num
    )
    (:init
        (is-wall n0 n0)
        (is-wall n1 n0)
        (is-wall n2 n0)
        (is-wall n3 n0)
        (is-wall n4 n0)
        (is-wall n5 n0)
        (is-wall n6 n0)
        (is-wall n7 n0)
        (is-wall n8 n0)
        (is-wall n0 n1)
        (is-wall n1 n1)
        (at n3 n1 hole_3_1)
        (is-wall n8 n1)
        (is-wall n0 n2)
        (is-wall n1 n2)
        (at n5 n2 box_5_2)
        (oriented-none avatar)
        (at n6 n2 avatar)
        (is-wall n8 n2)
        (is-wall n0 n3)
        (is-wall n5 n3)
        (is-wall n8 n3)
        (is-wall n0 n4)
        (is-wall n1 n4)
        (is-wall n2 n4)
        (at n3 n4 box_3_4)
        (is-wall n4 n4)
        (is-wall n8 n4)
        (is-wall n0 n5)
        (is-wall n1 n5)
        (is-wall n2 n5)
        (is-wall n6 n5)
        (is-wall n8 n5)
        (is-wall n0 n6)
        (is-wall n1 n6)
        (is-wall n2 n6)
        (at n3 n6 hole_3_6)
        (is-wall n8 n6)
        (is-wall n0 n7)
        (is-wall n1 n7)
        (is-wall n2 n7)
        (is-wall n3 n7)
        (is-wall n4 n7)
        (is-wall n5 n7)
        (is-wall n6 n7)
        (is-wall n7 n7)
        (is-wall n8 n7)
        (next n0 n1)
        (next n1 n2)
        (next n2 n3)
        (next n3 n4)
        (next n4 n5)
        (next n5 n6)
        (next n6 n7)
        (next n7 n8)
        (previous n1 n0)
        (previous n2 n1)
        (previous n3 n2)
        (previous n4 n3)
        (previous n5 n4)
        (previous n6 n5)
        (previous n7 n6)
        (previous n8 n7)
        (turn-avatar)
    )
    (:goal
        (AND
            (forall (?o - box) (object-dead ?o))
        )
    )
)