
  (:action avatar_action_move_left
    :parameters (avatar n4 n1 n3)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-left avatar)
          (oriented-none avatar)
        )
        (at n4 n1 avatar)
        (previous n4 n3)
        (not
          (is-wall n3 n1)
        )
      )
    :effect
      (and
        (not
          (at n4 n1 avatar)
        )
        (at n3 n1 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (oriented-left avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_left
    :parameters (avatar n3 n1 n2)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-left avatar)
          (oriented-none avatar)
        )
        (at n3 n1 avatar)
        (previous n3 n2)
        (not
          (is-wall n2 n1)
        )
      )
    :effect
      (and
        (not
          (at n3 n1 avatar)
        )
        (at n2 n1 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (oriented-left avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_down
    :parameters (avatar n2 n1 n2)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-down avatar)
          (oriented-none avatar)
        )
        (at n2 n1 avatar)
        (next n1 n2)
        (not
          (is-wall n2 n2)
        )
      )
    :effect
      (and
        (not
          (at n2 n1 avatar)
        )
        (at n2 n2 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-down avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_2_2 avatar n2 n2)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_2_2 avatar)
        )
        (at n2 n2 butterfly_2_2)
        (at n2 n2 avatar)
      )
    :effect
      (and
        (not
          (at n2 n2 butterfly_2_2)
        )
        (object-dead butterfly_2_2)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_down
    :parameters (avatar n2 n2 n3)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-down avatar)
          (oriented-none avatar)
        )
        (at n2 n2 avatar)
        (next n2 n3)
        (not
          (is-wall n2 n3)
        )
      )
    :effect
      (and
        (not
          (at n2 n2 avatar)
        )
        (at n2 n3 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-down avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_2_3 avatar n2 n3)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_2_3 avatar)
        )
        (at n2 n3 butterfly_2_3)
        (at n2 n3 avatar)
      )
    :effect
      (and
        (not
          (at n2 n3 butterfly_2_3)
        )
        (object-dead butterfly_2_3)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_down
    :parameters (avatar n2 n3 n4)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-down avatar)
          (oriented-none avatar)
        )
        (at n2 n3 avatar)
        (next n3 n4)
        (not
          (is-wall n2 n4)
        )
      )
    :effect
      (and
        (not
          (at n2 n3 avatar)
        )
        (at n2 n4 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-down avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_2_4 avatar n2 n4)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_2_4 avatar)
        )
        (at n2 n4 butterfly_2_4)
        (at n2 n4 avatar)
      )
    :effect
      (and
        (not
          (at n2 n4 butterfly_2_4)
        )
        (object-dead butterfly_2_4)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_left
    :parameters (avatar n2 n4 n1)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-left avatar)
          (oriented-none avatar)
        )
        (at n2 n4 avatar)
        (previous n2 n1)
        (not
          (is-wall n1 n4)
        )
      )
    :effect
      (and
        (not
          (at n2 n4 avatar)
        )
        (at n1 n4 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (oriented-left avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_1_4 avatar n1 n4)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_1_4 avatar)
        )
        (at n1 n4 butterfly_1_4)
        (at n1 n4 avatar)
      )
    :effect
      (and
        (not
          (at n1 n4 butterfly_1_4)
        )
        (object-dead butterfly_1_4)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n1 n4 n3)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n1 n4 avatar)
        (previous n4 n3)
        (not
          (is-wall n1 n3)
        )
      )
    :effect
      (and
        (not
          (at n1 n4 avatar)
        )
        (at n1 n3 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_1_3 avatar n1 n3)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_1_3 avatar)
        )
        (at n1 n3 butterfly_1_3)
        (at n1 n3 avatar)
      )
    :effect
      (and
        (not
          (at n1 n3 butterfly_1_3)
        )
        (object-dead butterfly_1_3)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n1 n3 n2)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n1 n3 avatar)
        (previous n3 n2)
        (not
          (is-wall n1 n2)
        )
      )
    :effect
      (and
        (not
          (at n1 n3 avatar)
        )
        (at n1 n2 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action butterfly_avatar_killsprite
    :parameters (butterfly_1_2 avatar n1 n2)
    :precondition
      (and
        (turn-interactions)
        (not
          (= butterfly_1_2 avatar)
        )
        (at n1 n2 butterfly_1_2)
        (at n1 n2 avatar)
      )
    :effect
      (and
        (not
          (at n1 n2 butterfly_1_2)
        )
        (object-dead butterfly_1_2)
      )
  )
