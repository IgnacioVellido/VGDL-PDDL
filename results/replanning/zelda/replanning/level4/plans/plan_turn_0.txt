
  (:action avatar_action_move_right
    :parameters (avatar n1 n7 n2)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n1 n7 avatar)
        (next n1 n2)
        (not
          (is-wall n2 n7)
        )
        (not
          (is-enemy n2 n7)
        )
      )
    :effect
      (and
        (not
          (at n1 n7 avatar)
        )
        (at n2 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n2 n7 n3)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n2 n7 avatar)
        (next n2 n3)
        (not
          (is-wall n3 n7)
        )
        (not
          (is-enemy n3 n7)
        )
      )
    :effect
      (and
        (not
          (at n2 n7 avatar)
        )
        (at n3 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n3 n7 n4)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n3 n7 avatar)
        (next n3 n4)
        (not
          (is-wall n4 n7)
        )
        (not
          (is-enemy n4 n7)
        )
      )
    :effect
      (and
        (not
          (at n3 n7 avatar)
        )
        (at n4 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_turn_up
    :parameters (avatar)
    :precondition
      (and
        (turn-avatar)
        (not
          (oriented-up avatar)
        )
      )
    :effect
      (and
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n4 n7 n6)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n4 n7 avatar)
        (previous n7 n6)
        (not
          (is-wall n4 n6)
        )
        (not
          (is-enemy n4 n6)
        )
      )
    :effect
      (and
        (not
          (at n4 n7 avatar)
        )
        (at n4 n6 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n4 n6 n5)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n4 n6 avatar)
        (previous n6 n5)
        (not
          (is-wall n4 n5)
        )
        (not
          (is-enemy n4 n5)
        )
      )
    :effect
      (and
        (not
          (at n4 n6 avatar)
        )
        (at n4 n5 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_turn_right
    :parameters (avatar)
    :precondition
      (and
        (turn-avatar)
        (not
          (oriented-right avatar)
        )
      )
    :effect
      (and
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (oriented-right avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n4 n5 n5)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n4 n5 avatar)
        (next n4 n5)
        (not
          (is-wall n5 n5)
        )
        (not
          (is-enemy n5 n5)
        )
      )
    :effect
      (and
        (not
          (at n4 n5 avatar)
        )
        (at n5 n5 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n5 n5 n6)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n5 n5 avatar)
        (next n5 n6)
        (not
          (is-wall n6 n5)
        )
        (not
          (is-enemy n6 n5)
        )
      )
    :effect
      (and
        (not
          (at n5 n5 avatar)
        )
        (at n6 n5 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_turn_down
    :parameters (avatar)
    :precondition
      (and
        (turn-avatar)
        (not
          (oriented-down avatar)
        )
      )
    :effect
      (and
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (oriented-down avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_down
    :parameters (avatar n6 n5 n6)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-down avatar)
          (oriented-none avatar)
        )
        (at n6 n5 avatar)
        (next n5 n6)
        (not
          (is-wall n6 n6)
        )
        (not
          (is-enemy n6 n6)
        )
      )
    :effect
      (and
        (not
          (at n6 n5 avatar)
        )
        (at n6 n6 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-down avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_down
    :parameters (avatar n6 n6 n7)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-down avatar)
          (oriented-none avatar)
        )
        (at n6 n6 avatar)
        (next n6 n7)
        (not
          (is-wall n6 n7)
        )
        (not
          (is-enemy n6 n7)
        )
      )
    :effect
      (and
        (not
          (at n6 n6 avatar)
        )
        (at n6 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-down avatar)
      )
  )

  (:action key_avatar_collectresource
    :parameters (key_6_7 avatar n6 n7 n0 n1)
    :precondition
      (and
        (turn-interactions)
        (not
          (= key_6_7 avatar)
        )
        (at n6 n7 key_6_7)
        (at n6 n7 avatar)
        (got-resource-key n0)
        (next n0 n0_next)
      )
    :effect
      (and
        (not
          (at n6 n7 key_6_7)
        )
        (object-dead key_6_7)
        (not
          (got-resource-key n0)
        )
        (got-resource-key n0_next)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_turn_right
    :parameters (avatar)
    :precondition
      (and
        (turn-avatar)
        (not
          (oriented-right avatar)
        )
      )
    :effect
      (and
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (oriented-right avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n6 n7 n7)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n6 n7 avatar)
        (next n6 n7)
        (not
          (is-wall n7 n7)
        )
        (not
          (is-enemy n7 n7)
        )
      )
    :effect
      (and
        (not
          (at n6 n7 avatar)
        )
        (at n7 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n7 n7 n8)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n7 n7 avatar)
        (next n7 n8)
        (not
          (is-wall n8 n7)
        )
        (not
          (is-enemy n8 n7)
        )
      )
    :effect
      (and
        (not
          (at n7 n7 avatar)
        )
        (at n8 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n8 n7 n9)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n8 n7 avatar)
        (next n8 n9)
        (not
          (is-wall n9 n7)
        )
        (not
          (is-enemy n9 n7)
        )
      )
    :effect
      (and
        (not
          (at n8 n7 avatar)
        )
        (at n9 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_right
    :parameters (avatar n9 n7 n10)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-right avatar)
          (oriented-none avatar)
        )
        (at n9 n7 avatar)
        (next n9 n10)
        (not
          (is-wall n10 n7)
        )
        (not
          (is-enemy n10 n7)
        )
      )
    :effect
      (and
        (not
          (at n9 n7 avatar)
        )
        (at n10 n7 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-up avatar)
          (not
            (oriented-up avatar)
          )
        )
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-right avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_turn_up
    :parameters (avatar)
    :precondition
      (and
        (turn-avatar)
        (not
          (oriented-up avatar)
        )
      )
    :effect
      (and
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n7 n6)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n7 avatar)
        (previous n7 n6)
        (not
          (is-wall n10 n6)
        )
        (not
          (is-enemy n10 n6)
        )
      )
    :effect
      (and
        (not
          (at n10 n7 avatar)
        )
        (at n10 n6 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n6 n5)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n6 avatar)
        (previous n6 n5)
        (not
          (is-wall n10 n5)
        )
        (not
          (is-enemy n10 n5)
        )
      )
    :effect
      (and
        (not
          (at n10 n6 avatar)
        )
        (at n10 n5 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n5 n4)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n5 avatar)
        (previous n5 n4)
        (not
          (is-wall n10 n4)
        )
        (not
          (is-enemy n10 n4)
        )
      )
    :effect
      (and
        (not
          (at n10 n5 avatar)
        )
        (at n10 n4 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n4 n3)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n4 avatar)
        (previous n4 n3)
        (not
          (is-wall n10 n3)
        )
        (not
          (is-enemy n10 n3)
        )
      )
    :effect
      (and
        (not
          (at n10 n4 avatar)
        )
        (at n10 n3 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n3 n2)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n3 avatar)
        (previous n3 n2)
        (not
          (is-wall n10 n2)
        )
        (not
          (is-enemy n10 n2)
        )
      )
    :effect
      (and
        (not
          (at n10 n3 avatar)
        )
        (at n10 n2 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action end-turn-interactions
    :parameters ()
    :precondition
      (and
        (turn-interactions)
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
        (not
          (exists ?o1 and)
        )
      )
    :effect
      (and
        (turn-sprites)
        (not
          (turn-interactions)
        )
      )
  )

  (:action turn-sprites
    :parameters ()
    :precondition
      (and
        (turn-sprites)
      )
    :effect
      (and
        (turn-sword-disappear)
        (not
          (turn-sprites)
        )
      )
  )

  (:action stop_sword_dissapear
    :parameters ()
    :precondition
      (and
        (turn-sword-disappear)
        (forall (?o - sword)
          (object-dead ?o)
        )
      )
    :effect
      (and
        (not
          (turn-sword-disappear)
        )
        (finished-turn-sword-disappear)
      )
  )

  (:action end-turn-sprites
    :parameters ()
    :precondition
      (and
        (finished-turn-sword-disappear)
        (not
          (turn-interactions)
        )
      )
    :effect
      (and
        (not
          (finished-turn-sword-disappear)
        )
        (turn-avatar)
      )
  )

  (:action avatar_action_move_up
    :parameters (avatar n10 n2 n1)
    :precondition
      (and
        (turn-avatar)
        (or
          (oriented-up avatar)
          (oriented-none avatar)
        )
        (at n10 n2 avatar)
        (previous n2 n1)
        (not
          (is-wall n10 n1)
        )
        (not
          (is-enemy n10 n1)
        )
      )
    :effect
      (and
        (not
          (at n10 n2 avatar)
        )
        (at n10 n1 avatar)
        (not
          (turn-avatar)
        )
        (turn-interactions)
        (when
          (oriented-down avatar)
          (not
            (oriented-down avatar)
          )
        )
        (when
          (oriented-right avatar)
          (not
            (oriented-right avatar)
          )
        )
        (when
          (oriented-left avatar)
          (not
            (oriented-left avatar)
          )
        )
        (oriented-up avatar)
      )
  )

  (:action goal_avatar_killifotherhasmore
    :parameters (goal_10_1 avatar n10 n1)
    :precondition
      (and
        (turn-interactions)
        (not
          (= goal_10_1 avatar)
        )
        (at n10 n1 goal_10_1)
        (at n10 n1 avatar)
        (got-resource-key n1)
      )
    :effect
      (and
        (object-dead goal_10_1)
        (not
          (at n10 n1 goal_10_1)
        )
      )
  )
